[tox]
minversion = 2.0
isolated_build = true
envlist = py39,clean,isort,black,pytest,flake8,pylint,mypy,bandit,report
skipsdist = true

# General configuration for all tox steps
[testenv]
allowlist_externals = poetry
passenv = *

# Clean last coverage results
[testenv:clean]
envdir = {toxworkdir}/py39
commands =
    poetry run coverage erase

# Formatters

[testenv:isort]
envdir = {toxworkdir}/py39
commands =
    poetry run isort fastapi_server tests

[testenv:black]
envdir = {toxworkdir}/py39
commands =
    poetry run black fastapi_server tests

# Run tests
[testenv:pytest]
envdir = {toxworkdir}/py39
commands =
    poetry run pytest tests --cov --cov-append {posargs:-vv}
depends =
    {pytest}: clean
    report: pytest

# Linters

[testenv:flake8]
envdir = {toxworkdir}/py39
commands =
    poetry run flake8 fastapi_server tests

[testenv:pylint]
envdir = {toxworkdir}/py39
commands =
    poetry run pylint fastapi_server tests

[testenv:mypy]
envdir = {toxworkdir}/py39
commands =
    poetry run mypy fastapi_server tests

# Secure Code
[testenv:bandit]
envdir = {toxworkdir}/py39
commands =
    poetry run bandit -r fastapi_server

# Write coverage report
[testenv:report]
envdir = {toxworkdir}/py39
commands =
    poetry run coverage html
    poetry run coverage report --fail-under=100
